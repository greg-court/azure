name: 'APIM Terraform CD'

on:
  push:
    branches:
      - main
    paths:
      - 'apim/**'
      - 'shared.tfvars'
      - '.github/workflows/apim-cd.yaml'
  workflow_dispatch:
    inputs:
      tf_action:
        description: "Terraform action ('apply' or 'destroy')"
        required: true
        default: 'apply'
        type: choice
        options:
          - apply
          - destroy

permissions:
  id-token: write
  contents: read

jobs:
  deploy_dev:
    name: 'Deploy APIM Dev'
    uses: greg-court/cicd-templates/.github/workflows/terraform-cd.yaml@main
    with:
      working_directory: 'apim'
      tfvars_paths: '["../shared.tfvars", "environments/dev.tfvars"]'
      job_prefix: 'dev'
      plan_environment_name: 'dev-plan'
      apply_environment_name: 'dev-apply'
      terraform_backend_key: 'apim.tfstate'
      tf_action: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.tf_action || 'apply' }}
    secrets: inherit

  deploy_prod:
    name: 'Deploy APIM Prod'
    needs: deploy_dev
    if: needs.deploy_dev.result == 'success'
    uses: greg-court/cicd-templates/.github/workflows/terraform-cd.yaml@main
    with:
      working_directory: 'apim'
      tfvars_paths: '["../shared.tfvars", "environments/prod.tfvars"]'
      job_prefix: 'prod'
      plan_environment_name: 'prod-plan'
      apply_environment_name: 'prod-apply'
      terraform_backend_key: 'apim.tfstate'
      tf_action: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.tf_action || 'apply' }}
    secrets: inherit